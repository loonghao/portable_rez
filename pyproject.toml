[tool.poetry]
name = "portable-rez"
version = "0.5.4"
description = "Portable Rez"
authors = ["loonghao <hal.long@outlook.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
rez = "^3.2.1"
pyside2 = "^5.15.2.1"
graphviz = "^0.20.3"
qt-py = "^1.4.1"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.5.4"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py36', 'py37', 'py38', 'py39']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.nox
    | \.venv
    | _build
    | buck-out
    | build
    | maya_umbrella/_vendor
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.isort]
profile = "black"
atomic = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
src_paths = ["portable_rez", "tests"]
filter_files = true
known_first_party = "portable_rez"

# Enforce import section headers.
import_heading_future = "Import future modules"
import_heading_stdlib = "Import built-in modules"
import_heading_thirdparty = "Import third-party modules"
import_heading_firstparty = "Import local modules"

force_sort_within_sections = true
force_single_line = true

# All project unrelated unknown imports belong to third-party.
default_section = "THIRDPARTY"


# https://beta.ruff.rs/docs/configuration/
[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".zip",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "dev",
    "noxfile.py",
]
line-length = 120

[tool.ruff.lint]
fixable = ["ALL"]
extend-select = [
    "Q",
    "RUF100",
    "C90",
    "UP",
    "I",
    "D",
    "DTZ005", # https://docs.astral.sh/ruff/rules/call-datetime-now-without-tzinfo/
] # add "T" to disallow prints
flake8-quotes = { inline-quotes = "double", multiline-quotes = "double" }
ignore = [
    "I001",
    "D107", # ignore missing docstring in __init__ methods
    "D100", # ignore missing docstring in module
    "D101",
    "D102",
    "D103", # ignore missing docstring in public class
    "D104", # ignore missing docstring in public package
    "D105", # ignore missing docstring in magic methods
    "C901", # ignore too complex functions, doesn't seem to be worth it
    "UP032",
    "UP004",
    "UP025",
]

[tool.ruff.lint.mccabe]
max-complexity = 45

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["D"]
"docs/*.py" = ["D"]
"dev/*.py" = ["D"]

[tool.ruff.format]
docstring-code-format = true
quote-style = "double"
